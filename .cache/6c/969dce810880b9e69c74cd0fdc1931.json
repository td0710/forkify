{"id":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","dependencies":[{"name":"D:\\forkify\\package.json","includedInParent":true,"mtime":1722417865370},{"name":"D:\\forkify\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1721903700590}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitOrDocs = void 0;\nvar bitOrDocs = exports.bitOrDocs = {\n  name: 'bitOr',\n  category: 'Bitwise',\n  syntax: ['x | y', 'bitOr(x, y)'],\n  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],\n  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":7}},{"generated":{"line":7,"column":4},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":11},"name":"bitOrDocs"},{"generated":{"line":7,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":20}},{"generated":{"line":7,"column":16},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":20},"name":"exports"},{"generated":{"line":7,"column":23},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":20}},{"generated":{"line":7,"column":24},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":20},"name":"bitOrDocs"},{"generated":{"line":7,"column":33},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":20}},{"generated":{"line":7,"column":36},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":1,"column":23}},{"generated":{"line":8,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":2},"name":"name"},{"generated":{"line":8,"column":6},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":6}},{"generated":{"line":8,"column":8},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":8}},{"generated":{"line":8,"column":15},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":2},"name":"category"},{"generated":{"line":9,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":10}},{"generated":{"line":9,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":12}},{"generated":{"line":9,"column":21},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":3,"column":21}},{"generated":{"line":10,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":2},"name":"syntax"},{"generated":{"line":10,"column":8},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":8}},{"generated":{"line":10,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":10}},{"generated":{"line":10,"column":11},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":11}},{"generated":{"line":10,"column":18},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":18}},{"generated":{"line":10,"column":20},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":20}},{"generated":{"line":10,"column":33},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":33}},{"generated":{"line":10,"column":34},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":4,"column":34}},{"generated":{"line":11,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":5,"column":2},"name":"description"},{"generated":{"line":11,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":5,"column":13}},{"generated":{"line":11,"column":15},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":5,"column":15}},{"generated":{"line":11,"column":268},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":5,"column":268}},{"generated":{"line":12,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":2},"name":"examples"},{"generated":{"line":12,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":10}},{"generated":{"line":12,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":12}},{"generated":{"line":12,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":13}},{"generated":{"line":12,"column":20},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":20}},{"generated":{"line":12,"column":22},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":22}},{"generated":{"line":12,"column":43},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":43}},{"generated":{"line":12,"column":44},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":6,"column":44}},{"generated":{"line":13,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":2},"name":"seealso"},{"generated":{"line":13,"column":9},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":9}},{"generated":{"line":13,"column":11},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":11}},{"generated":{"line":13,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":12}},{"generated":{"line":13,"column":20},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":20}},{"generated":{"line":13,"column":22},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":22}},{"generated":{"line":13,"column":30},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":30}},{"generated":{"line":13,"column":32},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":32}},{"generated":{"line":13,"column":40},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":40}},{"generated":{"line":13,"column":42},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":42}},{"generated":{"line":13,"column":53},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":53}},{"generated":{"line":13,"column":55},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":55}},{"generated":{"line":13,"column":72},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":72}},{"generated":{"line":13,"column":74},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":74}},{"generated":{"line":13,"column":89},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":7,"column":89}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":1},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js","original":{"line":8,"column":1}}],"sources":{"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js":"export var bitOrDocs = {\n  name: 'bitOr',\n  category: 'Bitwise',\n  syntax: ['x | y', 'bitOr(x, y)'],\n  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],\n  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};"},"lineCount":null}},"error":null,"hash":"d406deafec62030ac5934cb4c042184d","cacheData":{"env":{}}}