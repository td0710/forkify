{"id":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","dependencies":[{"name":"D:\\forkify\\package.json","includedInParent":true,"mtime":1722417865370},{"name":"D:\\forkify\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1721903700590},{"name":"../../utils/factory.js","loc":{"line":1,"column":24,"index":24},"parent":"D:\\forkify\\node_modules\\mathjs\\lib\\esm\\function\\utils\\typeOf.js","resolved":"D:\\forkify\\node_modules\\mathjs\\lib\\esm\\utils\\factory.js"},{"name":"../../utils/is.js","loc":{"line":2,"column":34,"index":84},"parent":"D:\\forkify\\node_modules\\mathjs\\lib\\esm\\function\\utils\\typeOf.js","resolved":"D:\\forkify\\node_modules\\mathjs\\lib\\esm\\utils\\is.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTypeOf = void 0;\nvar _factory = require(\"../../utils/factory.js\");\nvar _is = require(\"../../utils/is.js\");\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nvar createTypeOf = exports.createTypeOf = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Determine the type of an entity.\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    // This list is intended to include all relevant types, for testing\n   *    // purposes:\n   *    math.typeOf(3.5)                      // returns 'number'\n   *    math.typeOf(42n)                      // returns 'bigint'\n   *    math.typeOf(math.complex('2-4i'))     // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))      // returns 'Unit'\n   *    math.typeOf('hello world')            // returns 'string'\n   *    math.typeOf(null)                     // returns 'null'\n   *    math.typeOf(true)                     // returns 'boolean'\n   *    math.typeOf([1, 2, 3])                // returns 'Array'\n   *    math.typeOf(new Date())               // returns 'Date'\n   *    math.typeOf(function () {})           // returns 'function'\n   *    math.typeOf({a: 2, b: 3})             // returns 'Object'\n   *    math.typeOf(/a regexp/)               // returns 'RegExp'\n   *    math.typeOf(undefined)                // returns 'undefined'\n   *    math.typeOf(math.bignumber('23e99'))  // returns 'BigNumber'\n   *    math.typeOf(math.chain(2))            // returns 'Chain'\n   *    math.typeOf(math.fraction(1, 3))      // returns 'Fraction'\n   *    math.typeOf(math.help('sqrt'))        // returns 'Help'\n   *    math.typeOf(math.index(1, 3))         // returns 'Index'\n   *    math.typeOf(math.matrix([[1],[3]]))   // returns 'DenseMatrix'\n   *    math.typeOf(math.matrix([],'sparse')) // returns 'SparseMatrix'\n   *    math.typeOf(new math.Range(0, 10))    // returns 'Range'\n   *    math.typeOf(math.evaluate('a=2\\na'))  // returns 'ResultSet'\n   *    math.typeOf(math.parse('A[2]'))       // returns 'AccessorNode'\n   *    math.typeOf(math.parse('[1,2,3]'))    // returns 'ArrayNode'\n   *    math.typeOf(math.parse('x=2'))        // returns 'AssignmentNode'\n   *    math.typeOf(math.parse('a=2; b=3'))   // returns 'BlockNode'\n   *    math.typeOf(math.parse('x<0?-1:1'))   // returns 'ConditionalNode'\n   *    math.typeOf(math.parse('2.3'))        // returns 'ConstantNode'\n   *    math.typeOf(math.parse('f(x)=x^2'))   // returns 'FunctionAssignmentNode'\n   *    math.typeOf(math.parse('sqrt(4)'))    // returns 'FunctionNode'\n   *    math.typeOf(math.parse('A[2]').index) // returns 'IndexNode'\n   *    math.typeOf(math.parse('{a:2}'))      // returns 'ObjectNode'\n   *    math.typeOf(math.parse('(2+3)'))      // returns 'ParenthesisNode'\n   *    math.typeOf(math.parse('1:10'))       // returns 'RangeNode'\n   *    math.typeOf(math.parse('a<b<c'))      // returns 'RelationalNode'\n   *    math.typeOf(math.parse('x'))          // returns 'SymbolNode'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n  return typed(name, {\n    any: _is.typeOf\n  });\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":1,"column":0},"name":"_factory"},{"generated":{"line":7,"column":12},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":15},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":22},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":2,"column":0},"name":"_is"},{"generated":{"line":8,"column":7},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":10},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":2,"column":0},"name":"require"},{"generated":{"line":8,"column":17},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":4},"name":"name"},{"generated":{"line":9,"column":8},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":8}},{"generated":{"line":9,"column":11},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":11}},{"generated":{"line":9,"column":19},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":3,"column":19}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":4},"name":"dependencies"},{"generated":{"line":10,"column":16},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":16}},{"generated":{"line":10,"column":19},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":19}},{"generated":{"line":10,"column":20},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":20}},{"generated":{"line":10,"column":27},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":27}},{"generated":{"line":10,"column":28},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":4,"column":28}},{"generated":{"line":11,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":7}},{"generated":{"line":11,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":11},"name":"createTypeOf"},{"generated":{"line":11,"column":16},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":23}},{"generated":{"line":11,"column":19},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":23},"name":"exports"},{"generated":{"line":11,"column":26},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":23}},{"generated":{"line":11,"column":27},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":23},"name":"createTypeOf"},{"generated":{"line":11,"column":39},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":23}},{"generated":{"line":11,"column":42},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":26}},{"generated":{"line":11,"column":57},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":41}},{"generated":{"line":11,"column":61},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":41},"name":"factory"},{"generated":{"line":11,"column":77},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":48}},{"generated":{"line":11,"column":79},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":49},"name":"name"},{"generated":{"line":11,"column":83},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":53}},{"generated":{"line":11,"column":85},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":55},"name":"dependencies"},{"generated":{"line":11,"column":97},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":67}},{"generated":{"line":11,"column":99},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":69}},{"generated":{"line":11,"column":109},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":69},"name":"_ref"},{"generated":{"line":11,"column":113},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":73}},{"generated":{"line":11,"column":115},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":5,"column":77}},{"generated":{"line":12,"column":2},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":6,"column":2}},{"generated":{"line":12,"column":6},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":7,"column":4},"name":"typed"},{"generated":{"line":12,"column":11},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":7,"column":9}},{"generated":{"line":12,"column":14},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":8,"column":6},"name":"_ref"},{"generated":{"line":12,"column":18},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":8,"column":10}},{"generated":{"line":12,"column":19},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":7,"column":4},"name":"typed"},{"generated":{"line":12,"column":24},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":7,"column":9}},{"generated":{"line":13,"column":2},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":9,"column":2}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":12,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":13,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":14,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":15,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":16,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":17,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":18,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":19,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":20,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":21,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":22,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":23,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":24,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":25,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":26,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":27,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":28,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":29,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":30,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":31,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":32,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":33,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":34,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":35,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":36,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":37,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":38,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":39,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":40,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":41,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":42,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":43,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":44,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":45,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":46,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":47,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":48,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":49,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":50,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":51,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":52,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":53,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":54,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":55,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":56,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":57,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":58,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":59,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":60,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":61,"column":0}},{"generated":{"line":66,"column":2},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":2}},{"generated":{"line":66,"column":9},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":9},"name":"typed"},{"generated":{"line":66,"column":14},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":14}},{"generated":{"line":66,"column":15},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":15},"name":"name"},{"generated":{"line":66,"column":19},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":19}},{"generated":{"line":66,"column":21},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":62,"column":21}},{"generated":{"line":67,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":63,"column":4},"name":"any"},{"generated":{"line":67,"column":7},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":63,"column":7}},{"generated":{"line":67,"column":9},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":63,"column":9},"name":"_typeOf"},{"generated":{"line":68,"column":2},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":64,"column":2}},{"generated":{"line":68,"column":3},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":64,"column":3}},{"generated":{"line":68,"column":4},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":64,"column":4}},{"generated":{"line":69,"column":0},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":65,"column":0}},{"generated":{"line":69,"column":1},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":65,"column":1}},{"generated":{"line":69,"column":2},"source":"node_modules/mathjs/lib/esm/function/utils/typeOf.js","original":{"line":65,"column":2}}],"sources":{"node_modules/mathjs/lib/esm/function/utils/typeOf.js":"import { factory } from '../../utils/factory.js';\nimport { typeOf as _typeOf } from '../../utils/is.js';\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nexport var createTypeOf = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Determine the type of an entity.\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    // This list is intended to include all relevant types, for testing\n   *    // purposes:\n   *    math.typeOf(3.5)                      // returns 'number'\n   *    math.typeOf(42n)                      // returns 'bigint'\n   *    math.typeOf(math.complex('2-4i'))     // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))      // returns 'Unit'\n   *    math.typeOf('hello world')            // returns 'string'\n   *    math.typeOf(null)                     // returns 'null'\n   *    math.typeOf(true)                     // returns 'boolean'\n   *    math.typeOf([1, 2, 3])                // returns 'Array'\n   *    math.typeOf(new Date())               // returns 'Date'\n   *    math.typeOf(function () {})           // returns 'function'\n   *    math.typeOf({a: 2, b: 3})             // returns 'Object'\n   *    math.typeOf(/a regexp/)               // returns 'RegExp'\n   *    math.typeOf(undefined)                // returns 'undefined'\n   *    math.typeOf(math.bignumber('23e99'))  // returns 'BigNumber'\n   *    math.typeOf(math.chain(2))            // returns 'Chain'\n   *    math.typeOf(math.fraction(1, 3))      // returns 'Fraction'\n   *    math.typeOf(math.help('sqrt'))        // returns 'Help'\n   *    math.typeOf(math.index(1, 3))         // returns 'Index'\n   *    math.typeOf(math.matrix([[1],[3]]))   // returns 'DenseMatrix'\n   *    math.typeOf(math.matrix([],'sparse')) // returns 'SparseMatrix'\n   *    math.typeOf(new math.Range(0, 10))    // returns 'Range'\n   *    math.typeOf(math.evaluate('a=2\\na'))  // returns 'ResultSet'\n   *    math.typeOf(math.parse('A[2]'))       // returns 'AccessorNode'\n   *    math.typeOf(math.parse('[1,2,3]'))    // returns 'ArrayNode'\n   *    math.typeOf(math.parse('x=2'))        // returns 'AssignmentNode'\n   *    math.typeOf(math.parse('a=2; b=3'))   // returns 'BlockNode'\n   *    math.typeOf(math.parse('x<0?-1:1'))   // returns 'ConditionalNode'\n   *    math.typeOf(math.parse('2.3'))        // returns 'ConstantNode'\n   *    math.typeOf(math.parse('f(x)=x^2'))   // returns 'FunctionAssignmentNode'\n   *    math.typeOf(math.parse('sqrt(4)'))    // returns 'FunctionNode'\n   *    math.typeOf(math.parse('A[2]').index) // returns 'IndexNode'\n   *    math.typeOf(math.parse('{a:2}'))      // returns 'ObjectNode'\n   *    math.typeOf(math.parse('(2+3)'))      // returns 'ParenthesisNode'\n   *    math.typeOf(math.parse('1:10'))       // returns 'RangeNode'\n   *    math.typeOf(math.parse('a<b<c'))      // returns 'RelationalNode'\n   *    math.typeOf(math.parse('x'))          // returns 'SymbolNode'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n  return typed(name, {\n    any: _typeOf\n  });\n});"},"lineCount":null}},"error":null,"hash":"a52b6f86031fa206460e1e4547c052c0","cacheData":{"env":{}}}