{"id":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","dependencies":[{"name":"D:\\starter\\package.json","includedInParent":true,"mtime":1721903700703},{"name":"D:\\starter\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1721903700590}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEachDocs = void 0;\nvar forEachDocs = exports.forEachDocs = {\n  name: 'forEach',\n  category: 'Matrix',\n  syntax: ['forEach(x, callback)'],\n  description: 'Iterates over all elements of a matrix/array, and executes the given callback function.',\n  examples: ['numberOfPets = {}', 'addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;', 'forEach([\"Dog\",\"Cat\",\"Cat\"], addPet)', 'numberOfPets'],\n  seealso: ['map', 'sort', 'filter']\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":7}},{"generated":{"line":7,"column":4},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":11},"name":"forEachDocs"},{"generated":{"line":7,"column":15},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":22}},{"generated":{"line":7,"column":18},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":22},"name":"exports"},{"generated":{"line":7,"column":25},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":22}},{"generated":{"line":7,"column":26},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":22},"name":"forEachDocs"},{"generated":{"line":7,"column":37},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":22}},{"generated":{"line":7,"column":40},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":1,"column":25}},{"generated":{"line":8,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":2,"column":2},"name":"name"},{"generated":{"line":8,"column":6},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":2,"column":6}},{"generated":{"line":8,"column":8},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":2,"column":8}},{"generated":{"line":8,"column":17},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":2,"column":17}},{"generated":{"line":9,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":3,"column":2},"name":"category"},{"generated":{"line":9,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":3,"column":10}},{"generated":{"line":9,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":3,"column":12}},{"generated":{"line":9,"column":20},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":3,"column":20}},{"generated":{"line":10,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":4,"column":2},"name":"syntax"},{"generated":{"line":10,"column":8},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":4,"column":8}},{"generated":{"line":10,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":4,"column":10}},{"generated":{"line":10,"column":11},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":4,"column":11}},{"generated":{"line":10,"column":33},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":4,"column":33}},{"generated":{"line":10,"column":34},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":4,"column":34}},{"generated":{"line":11,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":5,"column":2},"name":"description"},{"generated":{"line":11,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":5,"column":13}},{"generated":{"line":11,"column":15},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":5,"column":15}},{"generated":{"line":11,"column":104},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":5,"column":104}},{"generated":{"line":12,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":2},"name":"examples"},{"generated":{"line":12,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":10}},{"generated":{"line":12,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":12}},{"generated":{"line":12,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":13}},{"generated":{"line":12,"column":32},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":32}},{"generated":{"line":12,"column":34},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":34}},{"generated":{"line":12,"column":109},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":109}},{"generated":{"line":12,"column":111},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":111}},{"generated":{"line":12,"column":149},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":149}},{"generated":{"line":12,"column":151},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":151}},{"generated":{"line":12,"column":165},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":165}},{"generated":{"line":12,"column":166},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":6,"column":166}},{"generated":{"line":13,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":2},"name":"seealso"},{"generated":{"line":13,"column":9},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":9}},{"generated":{"line":13,"column":11},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":11}},{"generated":{"line":13,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":12}},{"generated":{"line":13,"column":17},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":17}},{"generated":{"line":13,"column":19},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":19}},{"generated":{"line":13,"column":25},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":25}},{"generated":{"line":13,"column":27},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":27}},{"generated":{"line":13,"column":35},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":7,"column":35}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":1},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js","original":{"line":8,"column":1}}],"sources":{"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js":"export var forEachDocs = {\n  name: 'forEach',\n  category: 'Matrix',\n  syntax: ['forEach(x, callback)'],\n  description: 'Iterates over all elements of a matrix/array, and executes the given callback function.',\n  examples: ['numberOfPets = {}', 'addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;', 'forEach([\"Dog\",\"Cat\",\"Cat\"], addPet)', 'numberOfPets'],\n  seealso: ['map', 'sort', 'filter']\n};"},"lineCount":null}},"error":null,"hash":"b2276e3d4e21646ff8e59f3ed152c30a","cacheData":{"env":{}}}