{"id":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","dependencies":[{"name":"D:\\starter\\package.json","includedInParent":true,"mtime":1721903700703},{"name":"D:\\starter\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1721903700590}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compositionDocs = void 0;\nvar compositionDocs = exports.compositionDocs = {\n  name: 'composition',\n  category: 'Combinatorics',\n  syntax: ['composition(n, k)'],\n  description: 'The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.',\n  examples: ['composition(5, 3)'],\n  seealso: ['combinations']\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":7}},{"generated":{"line":7,"column":4},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":11},"name":"compositionDocs"},{"generated":{"line":7,"column":19},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":26}},{"generated":{"line":7,"column":22},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":26},"name":"exports"},{"generated":{"line":7,"column":29},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":26}},{"generated":{"line":7,"column":30},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":26},"name":"compositionDocs"},{"generated":{"line":7,"column":45},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":26}},{"generated":{"line":7,"column":48},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":1,"column":29}},{"generated":{"line":8,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":2,"column":2},"name":"name"},{"generated":{"line":8,"column":6},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":2,"column":6}},{"generated":{"line":8,"column":8},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":2,"column":8}},{"generated":{"line":8,"column":21},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":2,"column":21}},{"generated":{"line":9,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":3,"column":2},"name":"category"},{"generated":{"line":9,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":3,"column":10}},{"generated":{"line":9,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":3,"column":12}},{"generated":{"line":9,"column":27},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":3,"column":27}},{"generated":{"line":10,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":2},"name":"syntax"},{"generated":{"line":10,"column":8},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":8}},{"generated":{"line":10,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":10}},{"generated":{"line":10,"column":11},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":11}},{"generated":{"line":10,"column":30},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":30}},{"generated":{"line":10,"column":31},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":4,"column":31}},{"generated":{"line":11,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":5,"column":2},"name":"description"},{"generated":{"line":11,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":5,"column":13}},{"generated":{"line":11,"column":15},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":5,"column":15}},{"generated":{"line":11,"column":150},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":5,"column":150}},{"generated":{"line":12,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":6,"column":2},"name":"examples"},{"generated":{"line":12,"column":10},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":6,"column":10}},{"generated":{"line":12,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":6,"column":12}},{"generated":{"line":12,"column":13},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":6,"column":13}},{"generated":{"line":12,"column":32},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":6,"column":32}},{"generated":{"line":12,"column":33},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":6,"column":33}},{"generated":{"line":13,"column":2},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":2},"name":"seealso"},{"generated":{"line":13,"column":9},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":9}},{"generated":{"line":13,"column":11},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":11}},{"generated":{"line":13,"column":12},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":12}},{"generated":{"line":13,"column":26},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":7,"column":26}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":1},"source":"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js","original":{"line":8,"column":1}}],"sources":{"node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js":"export var compositionDocs = {\n  name: 'composition',\n  category: 'Combinatorics',\n  syntax: ['composition(n, k)'],\n  description: 'The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.',\n  examples: ['composition(5, 3)'],\n  seealso: ['combinations']\n};"},"lineCount":null}},"error":null,"hash":"206d89e21f1be34fea7fa295ddd6f789","cacheData":{"env":{}}}