{"id":"node_modules/mathjs/lib/esm/utils/scope.js","dependencies":[{"name":"D:\\forkify\\package.json","includedInParent":true,"mtime":1722417865370},{"name":"D:\\forkify\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1721903700590},{"name":"./map.js","loc":{"line":1,"column":50,"index":50},"parent":"D:\\forkify\\node_modules\\mathjs\\lib\\esm\\utils\\scope.js","resolved":"D:\\forkify\\node_modules\\mathjs\\lib\\esm\\utils\\map.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSubScope = createSubScope;\nvar _map = require(\"./map.js\");\n/**\n * Create a new scope which can access the parent scope,\n * but does not affect it when written. This is suitable for variable definitions\n * within a block node, or function definition.\n *\n * If parent scope has a createSubScope method, it delegates to that. Otherwise,\n * creates an empty map, and copies the parent scope to it, adding in\n * the remaining `args`.\n *\n * @param {Map} parentScope\n * @param  {Object} args\n * @returns {PartitionedMap}\n */\nfunction createSubScope(parentScope, args) {\n  return new _map.PartitionedMap(parentScope, new _map.ObjectWrappingMap(args), new Set(Object.keys(args)));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":1,"column":0},"name":"_map"},{"generated":{"line":7,"column":8},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":11},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":18},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":13,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":15,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":7}},{"generated":{"line":21,"column":9},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":16},"name":"createSubScope"},{"generated":{"line":21,"column":23},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":30},"name":"createSubScope"},{"generated":{"line":21,"column":24},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":31},"name":"parentScope"},{"generated":{"line":21,"column":35},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":42}},{"generated":{"line":21,"column":37},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":44},"name":"args"},{"generated":{"line":21,"column":41},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":48}},{"generated":{"line":21,"column":43},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":16,"column":50}},{"generated":{"line":22,"column":2},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":2}},{"generated":{"line":22,"column":9},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":9}},{"generated":{"line":22,"column":13},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":13},"name":"PartitionedMap"},{"generated":{"line":22,"column":32},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":27}},{"generated":{"line":22,"column":33},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":28},"name":"parentScope"},{"generated":{"line":22,"column":44},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":39}},{"generated":{"line":22,"column":46},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":41}},{"generated":{"line":22,"column":50},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":45},"name":"ObjectWrappingMap"},{"generated":{"line":22,"column":72},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":62}},{"generated":{"line":22,"column":73},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":63},"name":"args"},{"generated":{"line":22,"column":77},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":67}},{"generated":{"line":22,"column":78},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":68}},{"generated":{"line":22,"column":80},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":70}},{"generated":{"line":22,"column":84},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":74},"name":"Set"},{"generated":{"line":22,"column":87},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":77}},{"generated":{"line":22,"column":88},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":78},"name":"Object"},{"generated":{"line":22,"column":94},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":84}},{"generated":{"line":22,"column":95},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":85},"name":"keys"},{"generated":{"line":22,"column":99},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":89}},{"generated":{"line":22,"column":100},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":90},"name":"args"},{"generated":{"line":22,"column":104},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":94}},{"generated":{"line":22,"column":105},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":95}},{"generated":{"line":22,"column":106},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":96}},{"generated":{"line":22,"column":107},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":17,"column":97}},{"generated":{"line":23,"column":0},"source":"node_modules/mathjs/lib/esm/utils/scope.js","original":{"line":18,"column":0}}],"sources":{"node_modules/mathjs/lib/esm/utils/scope.js":"import { ObjectWrappingMap, PartitionedMap } from './map.js';\n\n/**\n * Create a new scope which can access the parent scope,\n * but does not affect it when written. This is suitable for variable definitions\n * within a block node, or function definition.\n *\n * If parent scope has a createSubScope method, it delegates to that. Otherwise,\n * creates an empty map, and copies the parent scope to it, adding in\n * the remaining `args`.\n *\n * @param {Map} parentScope\n * @param  {Object} args\n * @returns {PartitionedMap}\n */\nexport function createSubScope(parentScope, args) {\n  return new PartitionedMap(parentScope, new ObjectWrappingMap(args), new Set(Object.keys(args)));\n}"},"lineCount":null}},"error":null,"hash":"87a3092d75bcf74c93f91e2e10b7b686","cacheData":{"env":{}}}