{"id":"node_modules/mathjs/lib/esm/utils/complex.js","dependencies":[{"name":"D:\\starter\\package.json","includedInParent":true,"mtime":1721903700703},{"name":"D:\\starter\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1721903700590},{"name":"./number.js","loc":{"line":1,"column":28,"index":28},"parent":"D:\\starter\\node_modules\\mathjs\\lib\\esm\\utils\\complex.js","resolved":"D:\\starter\\node_modules\\mathjs\\lib\\esm\\utils\\number.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.complexEquals = complexEquals;\nvar _number = require(\"./number.js\");\n/**\n * Test whether two complex values are equal provided a given relTol and absTol.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x - The first complex number for comparison.\n * @param {Complex} y - The second complex number for comparison.\n * @param {number} relTol - The relative tolerance for comparison.\n * @param {number} absTol - The absolute tolerance for comparison.\n * @returns {boolean} - Returns true if the two complex numbers are equal within the given tolerances, otherwise returns false.\n */\nfunction complexEquals(x, y, relTol, absTol) {\n  return (0, _number.nearlyEqual)(x.re, y.re, relTol, absTol) && (0, _number.nearlyEqual)(x.im, y.im, relTol, absTol);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":1,"column":0},"name":"_number"},{"generated":{"line":7,"column":11},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":14},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":21},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":6,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":7}},{"generated":{"line":17,"column":9},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":16},"name":"complexEquals"},{"generated":{"line":17,"column":22},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":29},"name":"complexEquals"},{"generated":{"line":17,"column":23},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":30},"name":"x"},{"generated":{"line":17,"column":24},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":31}},{"generated":{"line":17,"column":26},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":33},"name":"y"},{"generated":{"line":17,"column":27},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":34}},{"generated":{"line":17,"column":29},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":36},"name":"relTol"},{"generated":{"line":17,"column":35},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":42}},{"generated":{"line":17,"column":37},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":44},"name":"absTol"},{"generated":{"line":17,"column":43},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":50}},{"generated":{"line":17,"column":45},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":12,"column":52}},{"generated":{"line":18,"column":2},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":2}},{"generated":{"line":18,"column":9},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":9}},{"generated":{"line":18,"column":13},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":9},"name":"nearlyEqual"},{"generated":{"line":18,"column":32},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":20}},{"generated":{"line":18,"column":34},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":21},"name":"x"},{"generated":{"line":18,"column":35},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":22}},{"generated":{"line":18,"column":36},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":23},"name":"re"},{"generated":{"line":18,"column":38},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":25}},{"generated":{"line":18,"column":40},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":27},"name":"y"},{"generated":{"line":18,"column":41},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":28}},{"generated":{"line":18,"column":42},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":29},"name":"re"},{"generated":{"line":18,"column":44},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":31}},{"generated":{"line":18,"column":46},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":33},"name":"relTol"},{"generated":{"line":18,"column":52},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":39}},{"generated":{"line":18,"column":54},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":41},"name":"absTol"},{"generated":{"line":18,"column":60},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":47}},{"generated":{"line":18,"column":61},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":48}},{"generated":{"line":18,"column":65},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":52}},{"generated":{"line":18,"column":69},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":52},"name":"nearlyEqual"},{"generated":{"line":18,"column":88},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":63}},{"generated":{"line":18,"column":90},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":64},"name":"x"},{"generated":{"line":18,"column":91},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":65}},{"generated":{"line":18,"column":92},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":66},"name":"im"},{"generated":{"line":18,"column":94},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":68}},{"generated":{"line":18,"column":96},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":70},"name":"y"},{"generated":{"line":18,"column":97},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":71}},{"generated":{"line":18,"column":98},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":72},"name":"im"},{"generated":{"line":18,"column":100},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":74}},{"generated":{"line":18,"column":102},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":76},"name":"relTol"},{"generated":{"line":18,"column":108},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":82}},{"generated":{"line":18,"column":110},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":84},"name":"absTol"},{"generated":{"line":18,"column":116},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":90}},{"generated":{"line":18,"column":117},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":13,"column":91}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/lib/esm/utils/complex.js","original":{"line":14,"column":0}}],"sources":{"node_modules/mathjs/lib/esm/utils/complex.js":"import { nearlyEqual } from './number.js';\n\n/**\n * Test whether two complex values are equal provided a given relTol and absTol.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x - The first complex number for comparison.\n * @param {Complex} y - The second complex number for comparison.\n * @param {number} relTol - The relative tolerance for comparison.\n * @param {number} absTol - The absolute tolerance for comparison.\n * @returns {boolean} - Returns true if the two complex numbers are equal within the given tolerances, otherwise returns false.\n */\nexport function complexEquals(x, y, relTol, absTol) {\n  return nearlyEqual(x.re, y.re, relTol, absTol) && nearlyEqual(x.im, y.im, relTol, absTol);\n}"},"lineCount":null}},"error":null,"hash":"f83ef61d1d266ad4899abc8e4b785d71","cacheData":{"env":{}}}